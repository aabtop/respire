'''Script to convert Makefile-formatted dependency files to respire-formatted.

The standard dependency file format generated by GCC and clang is oriented
for being parsed by Makeful.  This script outputs a dependency file formatted
for respire, which is just a list of files separated by newlines.
'''

import argparse
import os
import sys


def ConvertDependencyFile(input_file, output_file):
  for i, input_line in enumerate(input_file):
    if i == 0:
      continue

    output_file.write(input_line.lstrip().rstrip(' \t\n\r\\') + '\n')


def main():
  parser = argparse.ArgumentParser(description='Respire build entry point.')

  def _IsInputFileValid(arg):
    if not os.path.isfile(arg):
      parser.error('The file %s does not exist!' % arg)
    else:
      return arg

  parser.add_argument(
      '-i', '--input_file', required=True, type=_IsInputFileValid)
  parser.add_argument(
      '-o', '--output_file', required=True)
  args = parser.parse_args()

  with open(args.input_file, 'r') as i, open(args.output_file, 'w') as o:
    ConvertDependencyFile(i, o)


if __name__ == "__main__":
  sys.exit(main())
